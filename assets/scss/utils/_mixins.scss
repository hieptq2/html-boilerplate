/* ============================================================================
   UTILS / mixins
   ========================================================================= */



/**
 * Bourbon
 * 
 */

// all-buttons -active -focus -hover (var)
//  #{$all-buttons} {}
// 
// font-face (mixin)
//   @include font-face(
//    "source-sans-pro",
//    "fonts/source-sans-pro-regular",
//    ("woff2", "woff")
//    ){
//    font-style: normal;
//    font-weight: 400;
//   }
// 
// font-stack-helvetica (var)
//  lucida-grande, verdana, system, garamond, georgia, 
//  hoefler-text, consolas, courier-new, monaco
// 
// hide-text (mixin)
//  @include hide-text;
//  
// hide-visually (mixin)
//  @include hide-visually;
// 
// overflow-wrap (mixin)
//  @include overflow-wrap;
// 
// position (mixin)
//  @include position(relative, 0 null null 10em);
// 
// all-text-inputs: -active,-focus, hover, -invalid (var)
// 
// tint (func) Mixes a color with white
//   background-color: tint(#6ecaa6, 40%);
// 
// triangle (mixin)
//   @include triangle("up", 2rem, 1rem, #b25c9c);
// 
// value-prefixer (mixin)
//   @include value-prefixer(cursor, grab, ("webkit", "moz"));



// ============================================================================



/**
 * Compass
 * 
 */

// Animation
//  keyframe, animation
// Appearance
//  appearance
// Background Clip
// Background Origin
// Background Size
// Border Radius
// Box Shadow
// Box Sizing
// CSS Regions
// CSS3 Pie
// Columns
// Filter
// Flexbox
// Font Face
// Hyphenation
// Images
// Inline Block
// Opacity
// Selection
// Text Shadow
// Transform
// Transition
// User Interface
//  user-select, input-placeholder


// ============================================================================


/** 
 * Breakpoint viewport sizes and media queries
 */

@mixin viewport-min($breakpoint){
  $min: map-get($breakpoints, $breakpoint);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  }@else{
    @content;
  }  
}

@mixin viewport-max($breakpoint){
	$max: map-get($breakpoints, $breakpoint);
  @if $max {
    @media (max-width: $max - 1) {
      @content;
    }
  }@else{
    @content;
  }  
}

@mixin viewport-between($lower, $upper){
  $min: map-get($breakpoints, $lower);
  $max: map-get($breakpoints, $upper) - 1;
  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  }@else if $max == null {
    @include viewport-min($lower) {
      @content;
    }
  }@else if $min == null {
    @include viewport-max($upper) {
      @content;
    }
  }
}


/**
 * One text row limit (place '...' at the end)
 */

@mixin ellipsis-one($display: block, $width: auto, $max-width: 100%){
  display: $display;
  width: $width;
  max-width: $max-width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


/**
 * Multiple text rows limit (place '...' at the end)
 * (webkit)
 */

@mixin ellipsis-multiple($line-height, $lines-to-show, $height: false){
  display: block;
  display: -webkit-box;
  line-height: $line-height;
  max-height: $lines-to-show * $line-height;
  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  @if ($height){
  	height: $lines-to-show * $line-height;
  }
}


/**
 * Customize scrollbar
 * (webkit)
 */

@mixin scrollbar($size, $primary, $secondary: lighten($primary, 40%), $border-radius: 0) {
  &::-webkit-scrollbar {
    width:  $size;
    height: $size;
  }
  &::-webkit-scrollbar-thumb {
    background: $primary;
    border-radius: $border-radius;
  }
  &::-webkit-scrollbar-track {
    background: $secondary;
    border-radius: $border-radius;
  }
}


/**
 * Triangles
 * (direction: top, bottom, left, right, top-right, bottom-right, bottom-left, top-left)
 */

@mixin triangle($direction, $width, $height, $color: #000){
  display: block;
  width: 0;
  height: 0;
  border-style: solid;
  @if $direction == 'top' {
    border-width: 0 $width/2 $height $width/2;
    border-color: transparent transparent $color transparent;
  }@else if $direction == 'bottom' {
    border-width: $height $width/2 0 $width/2;
    border-color: $color transparent transparent transparent;
  }@else if $direction == 'left' {
    border-width: $height/2 $width $height/2 0;
    border-color: transparent $color transparent transparent;
  }@else if $direction == 'right' {
    border-width: $height/2 0 $height/2 $width;
    border-color: transparent transparent transparent $color;
  }@else if $direction == 'top-right' {
    border-width: 0 $width $height 0;
    border-color: transparent $color transparent transparent;
  }@else if $direction == 'bottom-right' {
    border-width: 0 0 $width $height;
    border-color: transparent transparent $color transparent;
  }@else if $direction == 'bottom-left' {
    border-width: $width 0 0 $height;
    border-color: transparent transparent transparent $color;
  }@else if $direction == 'top-left' {
    border-width: $width $height 0 0;
    border-color: $color transparent transparent transparent;
  }@else{
    @warn "=> ERROR: NO TRIANGLE TYPE FOUND!";
  }
}